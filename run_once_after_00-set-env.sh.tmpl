#!/bin/bash

# include global vars and functions
source "${INCLUDES}"

{{  if eq .chezmoi.os "linux" -}}
bdb_command "Installing Linux packages"

{{-      if eq .osid "linux-ubuntu" }}
# install required APT packages
sudo apt update
sudo apt install -y $PACKAGES
# install ghostty via snap
sudo snap install ghostty --classic

{{-      else if eq .osid "linux-arch" }}
# update the system and install required packages
sudo pacman -Syu --needed --noconfirm $PACKAGES

{{-      else if eq .osid "linux-fedora" }}
# update the system and install required packages
sudo dnf -y upgrade && sudo dnf -y install $PACKAGES
# install ghostty via snap
sudo snap install ghostty --classic

{{-      end }}
bdb_success "installing Linux packages"

{{-  else if eq .osid "darwin" }}
# install Comman Line Tools if missing
bdb_run "Checking Xcode Command Line Tools"
if  ! type xcode-select &>/dev/null || \
    ! clt_path="$(xcode-select --print-path &>/dev/null)" || \
    ! test -d "${clt_path}" || \
    ! test -x "${clt_path}"; then

    bdb_outcome "missing"
    bdb_command "Installing CLT"
    sudo softwareupdate -i "$(  sudo softwareupdate -l | \
                                grep '*.*Command Line' | \
                                awk -F ":" '{print $2}' | \
                                sed -e 's/^ *//' | \
                                tr -d '\n' \
                            )" --agree-to-license
    bdb_success "installing CLT"
else
    bdb_outcome "installed"
fi

# install Homebrew if missing
bdb_run "Checking Homebrew"
if ! type brew &>/dev/null; then

    # install homebrew
    bdb_outcome "missing"
    bdb_command "Installing Homebrew"
    NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    bdb_success "installing Homebrew"

    # install required packages
    bdb_command "Installing Homebrew formulae"
    brew bundle install --file=".config/homebrew/brewfile"
    bdb_success "installing Homebrew formulae"

else
    bdb_outcome "installed"
fi

{{  else if eq .osid "windows" -}}
{{  end -}}

# load bat colorscheme from ~/.config/bat/themes
{{ if eq .osid "linux-ubuntu" -}}
batcat cache --build
{{ else -}}
bat cache --build
{{ end -}}

# set the login shell
bdb_run "Changing the login shell"
if type zsh &>/dev/null; then
    zsh_path="$(which zsh)"
    if [[ "${SHELL}" != "${zsh_path}" ]]; then
        echo "${zsh_path}" | sudo tee -a /etc/shells >/dev/null
        sudo chsh -s "${zsh_path}" "${USER}"
    fi
    bdb_outcome "changed to ${zsh_path}"
else
    bdb_outcome "${zsh_path} not found"
fi
